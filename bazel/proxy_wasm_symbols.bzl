ORIGINAL_SYMS = [
    "_start",
    "proxy_on_memory_allocate",
    "proxy_on_context_create",
    "proxy_on_done",
    "proxy_on_log",
    "proxy_on_delete",
    "proxy_on_vm_start",
    "proxy_on_configure",
    "proxy_on_tick",
    "proxy_on_queue_ready",
    "proxy_on_new_connection",
    "proxy_on_downstream_data",
    "proxy_on_downstream_connection_close",
    "proxy_on_upstream_data",
    "proxy_on_upstream_connection_close",
    "proxy_on_request_headers",
    "proxy_on_request_body",
    "proxy_on_request_trailers",
    "proxy_on_response_headers",
    "proxy_on_response_body",
    "proxy_on_response_trailers",
    "proxy_on_http_call_response",
    "proxy_log",
    "proxy_get_current_time_nanoseconds",
    "proxy_set_tick_period_milliseconds",
    "proxy_get_configuration",
    "proxy_get_buffer_bytes",
    "proxy_set_buffer_bytes",
    "proxy_get_header_map_pairs",
    "proxy_set_header_map_pairs",
    "proxy_get_header_map_value",
    "proxy_replace_header_map_value",
    "proxy_remove_header_map_value",
    "proxy_add_header_map_value",
    "proxy_get_property",
    "proxy_set_property",
    "proxy_get_shared_data",
    "proxy_set_shared_data",
    "proxy_register_shared_queue",
    "proxy_resolve_shared_queue",
    "proxy_dequeue_shared_queue",
    "proxy_enqueue_shared_queu",
    "proxy_enqueue_shared_queue",
    "proxy_continue_request",
    "proxy_continue_response",
    "proxy_send_local_response",
    "proxy_clear_route_cache",
    "proxy_http_call",
    "proxy_set_effective_context",
    "proxy_done",
    "proxy_define_metric",
    "proxy_get_metric",
    "proxy_record_metric",
    "proxy_increment_metric",
]

def prefix_proxy_wasm_symbols(src, prefix, out):
    flags = ""
    for sym in ORIGINAL_SYMS:
        flags += " --redefine-sym {}={}".format(sym, prefix + sym)

    native.genrule(
        name = prefix + out,
        srcs = [src],
        outs = [out],
        cmd = "objcopy {} $(location {}) $@ ".format(flags, src),
    )
